{"ast":null,"code":"// import React, { useEffect } from \"react\";\n// import { Accordion, Badge, Button, Card } from \"react-bootstrap\";\n// import MainScreen from \"../../components/MainScreen\";\n// import { Link } from \"react-router-dom\";\n// import ReactMarkdown from \"react-markdown\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\n// import Loading from \"../../components/Loading\";\n// import ErrorMessage from \"../../components/ErrorMessage\";\n// function MyNotes({ history, search }) {\n//   const dispatch = useDispatch();\n//   const noteList = useSelector((state) => state.noteList);\n//   const { loading, error, notes } = noteList;\n//   // const filteredNotes = notes.filter((note) =>\n//   //   note.title.toLowerCase().includes(search.toLowerCase())\n//   // );\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n//   const noteDelete = useSelector((state) => state.noteDelete);\n//   const {\n//     loading: loadingDelete,\n//     error: errorDelete,\n//     success: successDelete,\n//   } = noteDelete;\n//   const noteCreate = useSelector((state) => state.noteCreate);\n//   const { success: successCreate } = noteCreate;\n//   const noteUpdate = useSelector((state) => state.noteUpdate);\n//   const { success: successUpdate } = noteUpdate;\n//   useEffect(() => {\n//     dispatch(listNotes());\n//     if (!userInfo) {\n//       history.push(\"/\");\n//     }\n//   }, [\n//     dispatch,\n//     history,\n//     userInfo,\n//     successDelete,\n//     successCreate,\n//     successUpdate,\n//   ]);\n//   const deleteHandler = (id) => {\n//     if (window.confirm(\"Are you sure?\")) {\n//       dispatch(deleteNoteAction(id));\n//     }\n//   };\n//   return (\n//     <MainScreen title={`Welcome Back ${userInfo && userInfo.name}..`}>\n//       {console.log(notes)}\n//       <Link to=\"/createnote\">\n//         <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n//           Create new Note\n//         </Button>\n//       </Link>\n//       {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n//       {errorDelete && (\n//         <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n//       )}\n//       {loading && <Loading />}\n//       {loadingDelete && <Loading />}\n//       {notes &&\n//         notes\n//           .filter((filteredNote) =>\n//             filteredNote.title.toLowerCase().includes(search.toLowerCase())\n//           )\n//           .reverse()\n//           .map((note) => (\n//             <Accordion>\n//               <Card style={{ margin: 10 }} key={note._id}>\n//                 <Card.Header style={{ display: \"flex\" }}>\n//                   <span\n//                     // onClick={() => ModelShow(note)}\n//                     style={{\n//                       color: \"black\",\n//                       textDecoration: \"none\",\n//                       flex: 1,\n//                       cursor: \"pointer\",\n//                       alignSelf: \"center\",\n//                       fontSize: 18,\n//                     }}\n//                   >\n//                     <Accordion.Toggle\n//                       as={Card.Text}\n//                       variant=\"link\"\n//                       eventKey=\"0\"\n//                     >\n//                       {note.title}\n//                     </Accordion.Toggle>\n//                   </span>\n//                   <div>\n//                     <Button href={`/note/${note._id}`}>Edit</Button>\n//                     <Button\n//                       variant=\"danger\"\n//                       className=\"mx-2\"\n//                       onClick={() => deleteHandler(note._id)}\n//                     >\n//                       Delete\n//                     </Button>\n//                   </div>\n//                 </Card.Header>\n//                 <Accordion.Collapse eventKey=\"0\">\n//                   <Card.Body>\n//                     <h4>\n//                       <Badge variant=\"success\">\n//                         Category - {note.category}\n//                       </Badge>\n//                     </h4>\n//                     <blockquote className=\"blockquote mb-0\">\n//                       <ReactMarkdown>{note.content}</ReactMarkdown>\n//                       <footer className=\"blockquote-footer\">\n//                         Created on{\" \"}\n//                         <cite title=\"Source Title\">\n//                           {note.createdAt.substring(0, 10)}\n//                         </cite>\n//                       </footer>\n//                     </blockquote>\n//                   </Card.Body>\n//                 </Accordion.Collapse>\n//               </Card>\n//             </Accordion>\n//           ))}\n//     </MainScreen>\n//   );\n// }\n// export default MyNotes;","map":{"version":3,"sources":["C:/Users/Manohar/Desktop/Propertease/NOTEZIPPER-MASTER/frontend/src/screens/MyNotes/MyNotes.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect } from \"react\";\n// import { Accordion, Badge, Button, Card } from \"react-bootstrap\";\n// import MainScreen from \"../../components/MainScreen\";\n// import { Link } from \"react-router-dom\";\n// import ReactMarkdown from \"react-markdown\";\n\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\n// import Loading from \"../../components/Loading\";\n// import ErrorMessage from \"../../components/ErrorMessage\";\n\n// function MyNotes({ history, search }) {\n//   const dispatch = useDispatch();\n\n//   const noteList = useSelector((state) => state.noteList);\n//   const { loading, error, notes } = noteList;\n\n//   // const filteredNotes = notes.filter((note) =>\n//   //   note.title.toLowerCase().includes(search.toLowerCase())\n//   // );\n\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n\n//   const noteDelete = useSelector((state) => state.noteDelete);\n//   const {\n//     loading: loadingDelete,\n//     error: errorDelete,\n//     success: successDelete,\n//   } = noteDelete;\n\n//   const noteCreate = useSelector((state) => state.noteCreate);\n//   const { success: successCreate } = noteCreate;\n\n//   const noteUpdate = useSelector((state) => state.noteUpdate);\n//   const { success: successUpdate } = noteUpdate;\n\n//   useEffect(() => {\n//     dispatch(listNotes());\n//     if (!userInfo) {\n//       history.push(\"/\");\n//     }\n//   }, [\n//     dispatch,\n//     history,\n//     userInfo,\n//     successDelete,\n//     successCreate,\n//     successUpdate,\n//   ]);\n\n//   const deleteHandler = (id) => {\n//     if (window.confirm(\"Are you sure?\")) {\n//       dispatch(deleteNoteAction(id));\n//     }\n//   };\n\n//   return (\n//     <MainScreen title={`Welcome Back ${userInfo && userInfo.name}..`}>\n//       {console.log(notes)}\n//       <Link to=\"/createnote\">\n//         <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n//           Create new Note\n//         </Button>\n//       </Link>\n//       {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n//       {errorDelete && (\n//         <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n//       )}\n//       {loading && <Loading />}\n//       {loadingDelete && <Loading />}\n//       {notes &&\n//         notes\n//           .filter((filteredNote) =>\n//             filteredNote.title.toLowerCase().includes(search.toLowerCase())\n//           )\n//           .reverse()\n//           .map((note) => (\n//             <Accordion>\n//               <Card style={{ margin: 10 }} key={note._id}>\n//                 <Card.Header style={{ display: \"flex\" }}>\n//                   <span\n//                     // onClick={() => ModelShow(note)}\n//                     style={{\n//                       color: \"black\",\n//                       textDecoration: \"none\",\n//                       flex: 1,\n//                       cursor: \"pointer\",\n//                       alignSelf: \"center\",\n//                       fontSize: 18,\n//                     }}\n//                   >\n//                     <Accordion.Toggle\n//                       as={Card.Text}\n//                       variant=\"link\"\n//                       eventKey=\"0\"\n//                     >\n//                       {note.title}\n//                     </Accordion.Toggle>\n//                   </span>\n\n//                   <div>\n//                     <Button href={`/note/${note._id}`}>Edit</Button>\n//                     <Button\n//                       variant=\"danger\"\n//                       className=\"mx-2\"\n//                       onClick={() => deleteHandler(note._id)}\n//                     >\n//                       Delete\n//                     </Button>\n//                   </div>\n//                 </Card.Header>\n//                 <Accordion.Collapse eventKey=\"0\">\n//                   <Card.Body>\n//                     <h4>\n//                       <Badge variant=\"success\">\n//                         Category - {note.category}\n//                       </Badge>\n//                     </h4>\n//                     <blockquote className=\"blockquote mb-0\">\n//                       <ReactMarkdown>{note.content}</ReactMarkdown>\n//                       <footer className=\"blockquote-footer\">\n//                         Created on{\" \"}\n//                         <cite title=\"Source Title\">\n//                           {note.createdAt.substring(0, 10)}\n//                         </cite>\n//                       </footer>\n//                     </blockquote>\n//                   </Card.Body>\n//                 </Accordion.Collapse>\n//               </Card>\n//             </Accordion>\n//           ))}\n//     </MainScreen>\n//   );\n// }\n\n// export default MyNotes;\n"]},"metadata":{},"sourceType":"module"}