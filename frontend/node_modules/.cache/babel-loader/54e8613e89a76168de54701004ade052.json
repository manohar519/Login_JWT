{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer //userUpdateReducer,\n} from \"./reducers/userReducers\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Manohar/Desktop/Propertease/notezipper-master/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","reducer","userLogin","userRegister","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SACEC,gBADF,EAEEC,mBAFF,CAGE;AAHF,OAIO,yBAJP;AAMA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAE9BO,EAAAA,SAAS,EAAEH,gBAFmB;AAG9BI,EAAAA,YAAY,EAAEH;AAHgB,CAAD,CAA/B;AAOA,MAAMI,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBP,EAAAA,SAAS,EAAE;AAAEQ,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,KAAK,GAAGlB,WAAW,CACvBO,OADuB,EAEvBQ,YAFuB,EAGvBX,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  //userUpdateReducer,\n} from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n \n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  \n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}